---
title: "Untitled"
format: revealjs
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see <https://quarto.org/docs/presentations/>.

## Bullets

When you click the **Render** button a document will be generated that includes:

-   Content authored with markdown
-   Output from executable code

## Code

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r }


```

```{r setup, include=FALSE, echo=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(dplyr)
library(rvest)
library(magrittr)
library(ggmap)
library(stringr)
library(rworldmap)
library(scales)
library(plotly)
library(leaflet)
library(gganimate)

```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.

```{r, echo=FALSE}
#Importing datasets

library(readr)
id_health_medstaff <- read_csv("~/GitHub/DS_112_Project/resources/indicators/id_heal_04/input.csv", 
    col_types = cols(`1995` = col_double(), 
        `2015` = col_double()))
library(readr)
gdp <- read_csv("~/GitHub/DS_112_Project/resources/indicators/gdp/score.csv", 
    col_types = cols(`1995` = col_skip(), 
        `1996` = col_skip(), `1997` = col_skip(), 
        `1998` = col_skip(), `1999` = col_skip(), 
        `2000` = col_skip(), `2001` = col_skip(), 
        `2002` = col_skip(), `2003` = col_skip(), 
        `2004` = col_skip(), `2005` = col_skip(), 
        `2006` = col_skip(), `2007` = col_skip(), 
        `2008` = col_skip(), `2009` = col_skip(), 
        `2010` = col_skip(), `2011` = col_skip(), 
        `2012` = col_skip(), `2013` = col_skip(), 
        `2014` = col_skip(), `2015` = col_skip(), 
        `2016` = col_skip(), `2017` = col_skip(), 
        `2018` = col_skip(), `2019` = col_skip()))


pop <- read_csv("~/GitHub/DS_112_Project/resources/indicators/pop/input.csv", 
    col_types = cols(`1995` = col_skip(), 
        `1996` = col_skip(), `1997` = col_skip(), 
        `1998` = col_skip(), `1999` = col_skip(), 
        `2000` = col_skip(), `2001` = col_skip(), 
        `2002` = col_skip(), `2003` = col_skip(), 
        `2004` = col_skip(), `2005` = col_skip(), 
        `2006` = col_skip(), `2007` = col_skip(), 
        `2008` = col_skip(), `2009` = col_skip(), 
        `2010` = col_skip(), `2011` = col_skip(), 
        `2012` = col_skip(), `2013` = col_skip(), 
        `2014` = col_skip(), `2015` = col_skip(), 
        `2016` = col_skip(), `2017` = col_skip(), 
        `2018` = col_skip(), `2019` = col_skip()))


#projected percent increase in climate-change induced deaths
projecteddeath_perc <- read_csv("~/GitHub/DS_112_Project/resources/indicators/id_heal_01/input.csv",
    col_types = cols(`1995` = col_skip(), 
        `1996` = col_skip(), `1997` = col_skip(), 
        `1998` = col_skip(), `1999` = col_skip(), 
        `2000` = col_skip(), `2001` = col_skip(), 
        `2002` = col_skip(), `2003` = col_skip(), 
        `2004` = col_skip(), `2005` = col_skip(), 
        `2006` = col_skip(), `2007` = col_skip(), 
        `2008` = col_skip(), `2009` = col_skip(), 
        `2010` = col_skip(), `2011` = col_skip(), 
        `2012` = col_skip(), `2013` = col_skip(), 
        `2014` = col_skip(), `2015` = col_skip(), 
        `2016` = col_skip(), `2017` = col_skip(), 
        `2018` = col_skip(), `2019` = col_skip()))

projecteddeath_perc_all <- read_csv("~/GitHub/DS_112_Project/resources/indicators/id_heal_01/input.csv")

vulhealth <- read_csv("resources/vulnerability/health.csv")


```

```{r, echo=FALSE}

id_health_medstaff <- id_health_medstaff %>% 
  group_by(Name) %>% 
  mutate(percchange = .data[["2020"]] - .data[["1995"]]) %>% 
  arrange(desc(percchange))

mean(id_health_medstaff$percchange,na.rm=T)
  

```

```{r, echo=FALSE}
pop2020 <- pop %>% 
   rename("pop2020" = "2020")

gdp2020 <- gdp %>% 
   rename("gdp2020" = "2020")

medstaff2020 <- id_health_medstaff %>% 
  rename("medstaff2020" = "2020") %>% 
  select(ISO3,Name,medstaff2020)

projecteddeathperc2020 <- projecteddeath_perc %>% 
  rename("projecteddeathperc2020" = "2020")

data2020 <- pop2020 %>% 
  left_join(gdp2020) %>% 
  left_join(medstaff2020) %>% 
  left_join(projecteddeathperc2020)


```

```{r, echo=FALSE}
(
  
  hipopdata2020 <- data2020 %>% 
  arrange(desc(pop2020)) %>% 
  filter(pop2020 > 126000000)
  
)

  mostpopdata2020 <- data2020 %>% 
  arrange(desc(pop2020)) %>% 
  filter(pop2020 > 1000000)
```

```{r}

pdp <- ggplot(data = hipopdata2020, aes(x = gdp2020)) +
  geom_text(aes(x = gdp2020, y = pop2020, label = Name, color = projecteddeathperc2020), size=2.6) +
  geom_point(aes(x = gdp2020, y = pop2020, label = Name, color = projecteddeathperc2020, size = projecteddeathperc2020), alpha = .1) + 
  labs(title = "Projected % Increase in Climate-Change Induced Deaths \nBy GDP for the 10 Most Populous Countries", x = "GDP 2020 ($)", y = "Population 2020", color = "Projected Climate-change \nInduced Death % Increase") + guides(size="none") + scale_colour_gradient(low = 'blue', high = 'red') + theme_bw() + scale_y_continuous(limits = c(0, 1450000000), breaks=seq(0, 2000000000, by = 100000000), labels = scales::label_number_si()) +
  scale_x_continuous(limits = c(0, 70000), breaks=seq(0, 70000, by = 10000), labels = scales::label_number_si())

ggplotly(pdp)

allpdp <- ggplot(data = data2020, aes(x = gdp2020)) +
  geom_point(aes(x = gdp2020, y = pop2020, label = Name, color = projecteddeathperc2020, size = pop2020), alpha = .2) + 
  labs(title = "Projected % Increase in Climate-Change Induced Deaths", x = "GDP 2020 ($)", y = "Population 2020", color = "Projected Climate-change \nInduced Death % Increase") + guides(size="none") + scale_colour_gradient(low = 'blue', high = 'red') + theme_bw() + scale_y_continuous(limits = c(0, 1450000000), breaks=seq(0, 2000000000, by = 100000000), labels = scales::label_number_si()) +
  scale_x_continuous(limits = c(0, 70000), breaks=seq(0, 70000, by = 10000), labels = scales::label_number_si())

ggplotly(allpdp)

```

## 

```{r}
allpdp <- ggplot(data = data2020, aes(x = gdp2020)) +
  geom_point(aes(x = gdp2020, y = projecteddeathperc2020, label = Name, color = projecteddeathperc2020, size = pop2020), alpha = .2) + 
  labs(title = "Projected % Increase in Climate-Change Induced Deaths", x = "GDP 2020 ($)", y = "Projected Climate-change Induced Death % Increase", color = "%") + guides(size="none") + scale_colour_gradient(low = 'blue', high = 'red') + theme_bw() + scale_y_continuous(limits = c(1, 1.2), breaks=seq(1, 1.2, by = .02)) +
  scale_x_continuous(limits = c(0, 70000), breaks=seq(0, 70000, by = 10000), labels = scales::label_number_si())

ggplotly(allpdp)
```

```{r}
Continent2.0 <- health_vul %>%
 mutate(Name = if_else(Name == "Congo, the Democratic Republic o", "DR Congo", Name)) %>%
  mutate(Name = if_else(Name == "Russian Federation", "Russia", Name)) %>%
  mutate(Name = if_else(Name == "United Kingdom", "U.K", Name)) %>%
  mutate(Name = if_else(Name == "Papua New Guinea", "P.N.G", Name)) %>%
  mutate(Name = if_else(Name == "Venezuela, Bolivarian Republic o", "Venezuela", Name)) %>%
  filter(Name%in%c("China","India", "Indonesia", "Pakistan", "Bangladesh","Russia","Germany", "U.K", "France", "Italy","Nigeria","Ethiopia", "Egypt", "DR Congo", "South Africa","United States","Mexico", "Canada", "Guatemala", "Cuba","Australia","P.N.G", "New Zealand", "Fiji", "Solomon Islands","Brazil","Colombia", "Argentina", "Peru", "Venezuela")) %>%
  mutate(Continent =
            case_when(
            Name%in%c("Brazil","Colombia", "Argentina", "Peru", "Venezuela") ~
              "South America",
            Name%in%c("Australia","P.N.G", "New Zealand", "Fiji", "Solomon Islands") ~ "Oceania",
            Name%in%c("United States","Mexico", "Canada", "Guatemala", "Cuba") ~ "North America",
            Name%in%c("Russia","Germany", "U.K", "France", "Italy") ~ "Europe",
            Name%in%c("Nigeria","Ethiopia", "Egypt", "DR Congo", "South Africa") ~ "Africa",
          Name%in%c("China","India", "Indonesia", "Pakistan", "Bangladesh") ~ "Asia"))



p <- (Continent2.0 %>%
  ggplot(aes(x = year, y = vun, color = Continent, group = Name,text = paste0('Name: ',Name,'\n','Year: ',year,'\nVulnerability: ',round(vun,2))))+
  geom_line()+
    scale_color_viridis_d(option='turbo') +
    #scale_color_manual(values = cbp1)+
    theme_classic()+
  theme(axis.text.x = element_text(angle = 45, hjust=1))+
labs( y = "vulnerability",color = 'Continents') +
  theme(panel.background = element_rect(fill = "light grey", color = "light grey"), legend.background = element_rect(fill = "lightgrey")) +
  theme(plot.background = element_rect(fill = "light grey", color = "light grey"), plot.margin = margin(15, 2, 2, 2, "pt"),)+
  theme(plot.title = element_text(face = "bold")))

p %>%
  ggplotly(tooltip = c('text')) %>%
layout(title = list(text = paste0("Global Vulnerability to Disease ","<br><sup>","Showing the change over time in different countires","</sup>")))
```
